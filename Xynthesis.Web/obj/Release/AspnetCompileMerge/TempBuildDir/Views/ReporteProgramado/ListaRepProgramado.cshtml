@using PagedList.Mvc;
@model  PagedList.IPagedList<Xynthesis.Modelo.xy_configuracionrptprogramado>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Xynthesis.css" rel="stylesheet" />
<script src="~/Scripts/NotacionDecimal.js"></script>
@{
    ViewBag.Title = "Lista de reporte programado";
}

@if (Session["mensale"] != null)
{
    if (Session["mensale"].ToString() != "")
    {
        if (Session["codigo"] != null)
        {
            if (Session["codigo"].ToString() == "1")
            {
                <script>
                    var alerta = document.getElementById("divalert");
                     alerta.style.display = "block";
                    document.getElementById("divalert").style.color = "#2D4AA0";
                    setTimeout("alerta.style.display='none'", 15000);
                </script>
            }
            else
            {
                <script>
                    var alerta = document.getElementById("divalert");
                     alerta.style.display = "block";
                     document.getElementById("divalert").style.color = "#AB0D0D";
                     setTimeout("alerta.style.display='none'", 15000);
                </script>

            }
        }
    }
}

<div class="container">
    <div class="text-center">
        <h2><strong>Lista de reporte programado</strong></h2>
    </div>
    <br />
    @using (Html.BeginForm("OrdenFiltro", "ReporteProgramado", FormMethod.Get))
    {
        <div class="row form-inline">
            <div class="col-lg-9">
                <a role="button" class="btn btn-success" onclick="location.href='@Url.Action("RepProgramado", "ReporteProgramado")'">Nueva programación</a>

            </div>
            <div class="col-lg-3 form-group">
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, null, new { @class = "form-control", onkeypress = "return limipiarEspeciales(event)", onpaste = "return false", @placeholder = "BUSCA POR NOMBRE", @maxlengt = "50" })&nbsp;&nbsp;
                <button type="submit" class="btn btn-success "><span class="glyphicon glyphicon-search"></span></button>
            </div>

        </div>
        <br />
    }

    <table class="table table-responsive table-hover table-striped table-condensed">
        <tr style="background-color:#E1E1E1;">
            <th>
                @Html.ActionLink("NOMBRE", "OrdenFiltro", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, page = 1 }, new { @class = "text-muted" })
                @if (ViewBag.NameSortParm == "name_desc")
                {
                    <span class="glyphicon glyphicon-circle-arrow-down"></span>
                }
                else
                {
                    <span class="glyphicon glyphicon-circle-arrow-up"></span>
                }
            </th>
            <th style="color:#9C9999;">@Html.Label("PERIODICIDAD")</th>
            
            <th style="color:#9C9999;" class="text-center">@Html.Label("HORA DE EJECUCIÓN")</th>
            <th style="color:#9C9999;" class="text-center">@Html.Label("FORMATO")</th>
            <th style="color:#9C9999;">
                @Html.Label("EMAIL")
            </th>

            <th style="width:10%;"></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @{
                        var periodicidad = item.TipoFrecuencia.ToString().ToUpper();
                    }
                    @periodicidad
                </td>
                
                <td class="text-center">                   
                    @{
                        var hora = item.HoraEjecucion.ToString(" HH:mm:ss");
                    }
                    @hora
                </td>
                
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.FormatoArchivo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailFrom)
                </td>
                <td class="pull-right">
                    <a role="button" onclick="location.href='@Url.Action("EditarRepProg", "ReporteProgramado",new { id = item.ConfiguracionId })'"><span class="glyphicon glyphicon-pencil" style="font-size:20px;"></span></a>&nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.Raw("<a data-modal='' href='/ReporteProgramado/EliminarRegistro/" + item.ConfiguracionId + "' id='" + item.ConfiguracionId + "' title='Eliminar'> <span class='glyphicon glyphicon-trash'   style='font-size:20px;'> </span> </a>")
                </td>
            </tr>
        }

    </table>
    <div>
        <br />
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("ListaRepProgramado", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
    <div id='myModal' class='modal fade in'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/Scripts/respond.js")
}
